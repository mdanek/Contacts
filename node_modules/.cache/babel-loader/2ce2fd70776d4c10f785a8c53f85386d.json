{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\reactnd-contacts-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\dev\\\\reactnd-contacts-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\dev\\\\reactnd-contacts-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\dev\\\\reactnd-contacts-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\dev\\\\reactnd-contacts-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\dev\\\\reactnd-contacts-app\\\\src\\\\ListContacts.js\";\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nvar ListContacts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListContacts, _Component);\n\n  function ListContacts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListContacts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListContacts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: ''\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState(function () {\n        return {\n          query: query.trim()\n        };\n      });\n    };\n\n    _this.clearQuery = function () {\n      _this.updateQuery('');\n    };\n\n    return _this;\n  }\n\n  _createClass(ListContacts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var query = this.state.query;\n      var _this$props = this.props,\n          contacts = _this$props.contacts,\n          onDeleteContact = _this$props.onDeleteContact,\n          onNavigate = _this$props.onNavigate;\n      var showingContacts = query === \"\" ? contacts : contacts.filter(function (c) {\n        return c.name.toLowerCase().includes(query.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        className: \"list-contacts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-contacts-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-contacts\",\n        type: \"text\",\n        placeholder: \"Search Contacts\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this2.updateQuery(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/create\",\n        className: \"add-contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Add Contact\")), showingContacts.length !== contacts.length && React.createElement(\"div\", {\n        className: \"showing-contacts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Not showing \", showingContacts.length, \" of \", contacts.length), React.createElement(\"button\", {\n        onClick: this.clearQuery,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Show all\")), React.createElement(\"ol\", {\n        className: \"contact-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, showingContacts.map(function (contact) {\n        return React.createElement(\"li\", {\n          key: contact.id,\n          className: \"contact-list-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"contact-avatar\",\n          style: {\n            backgroundImage: \"url(\".concat(contact.avatarURL, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"contact-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, contact.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, contact.handle)), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return onDeleteContact(contact);\n          },\n          className: \"contact-remove\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Remove\"));\n      })));\n    }\n  }]);\n\n  return ListContacts;\n}(Component);\n\nListContacts.propTypes = {\n  contacts: propTypes.array.isRequired,\n  onDeleteContact: propTypes.func.isRequired\n};\nexport default ListContacts;","map":{"version":3,"sources":["C:\\dev\\reactnd-contacts-app\\src\\ListContacts.js"],"names":["React","Component","propTypes","Link","ListContacts","state","query","updateQuery","setState","trim","clearQuery","props","contacts","onDeleteContact","onNavigate","showingContacts","filter","c","name","toLowerCase","includes","event","target","value","length","map","contact","id","backgroundImage","avatarURL","handle","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ListContacts extends Component {\r\n    static propTypes = {\r\n        contacts: propTypes.array.isRequired,\r\n        onDeleteContact: propTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        query: '',\r\n    }\r\n\r\n    updateQuery = (query) => {\r\n        this.setState(() => ({\r\n            query: query.trim()\r\n        }))\r\n    }\r\n\r\n    clearQuery = () => {\r\n        this.updateQuery('')\r\n    }\r\n\r\n    render() {\r\n\r\n        const { query } = this.state\r\n        const { contacts, onDeleteContact, onNavigate } = this.props\r\n\r\n        const showingContacts = query === \"\"\r\n            ? contacts\r\n            : contacts.filter((c) => (\r\n                c.name.toLowerCase().includes(query.toLowerCase())\r\n            ))\r\n\r\n        return (\r\n            <div className='list-contacts'>\r\n                <div className='list-contacts-top'>\r\n                    <input \r\n                        className='search-contacts'\r\n                        type='text'\r\n                        placeholder='Search Contacts'\r\n                        value={query}\r\n                        onChange={(event) => this.updateQuery(event.target.value)}\r\n                    />\r\n                    <Link\r\n                    to='/create'\r\n                    className='add-contact'\r\n                    >Add Contact</Link>\r\n                </div>\r\n                {showingContacts.length !== contacts.length && (\r\n                    <div className='showing-contacts'>\r\n                        <span>Not showing {showingContacts.length} of {\r\n                            contacts.length}</span>\r\n                        <button onClick={this.clearQuery}>Show all</button>\r\n                    </div>\r\n                )}\r\n\r\n                <ol className='contact-list'>\r\n                    {showingContacts.map((contact) =>\r\n                    <li key={contact.id} className='contact-list-item'>\r\n                        <div\r\n                            className='contact-avatar' \r\n                            style={{\r\n                                backgroundImage: `url(${contact.avatarURL})`\r\n                            }}\r\n                        ></div>\r\n                        <div className='contact-details'>\r\n                            <p>{contact.name}</p>\r\n                            <p>{contact.handle}</p>\r\n                        </div>\r\n                        <button \r\n                            onClick={() => onDeleteContact(contact)}\r\n                            className='contact-remove'>\r\n                            Remove\r\n                        </button>\r\n                    </li>\r\n                    )}\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListContacts"]},"metadata":{},"sourceType":"module"}